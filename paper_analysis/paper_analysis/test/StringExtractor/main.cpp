//
// Created by qijiabao on 1/6/2024.
//
/*************************************************************************
 * @Project:     paper_analysis
 * @File:        main.cpp
 * @Brief:       Brief description of the file
 * @Author:      qijiabao
 * @Contact:     Your Contact Information (e.g., email)
 * @Date:        1/6/2024
 * @Description: 
 *               This file is generated by CLion to provide a
 *               template for C/C++ source or header files. You can modify
 *               this template according to your project's needs.
 * @Note:        Additional notes or important points related to the file.
 * @License:     License information if applicable.
 * @Version:     Version number or other version information.
 * @TODO:        List of tasks or things to be done in the file (if any).
 * @Bug:         List of known issues or bugs (if any).
 * @IDE:         CLion
 ************************************************************************/
// Include necessary headers, if any

// Additional comments or code go here


#include "StringExtractor.h"
#include <iostream>

int main() {
    // 创建 StringExtractor 对象
    StringExtractor extractor;

    // 测试用例 1
    std::string input1 = "This is a {{test}} string with {{''}} is this kind of string.";
    std::vector<std::string> result1 = extractor.extractStrings(input1);

    std::cout << "Test Case 1:" << std::endl;
    for (const auto& str : result1) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 2
    std::string input2 = "{{One}} {{Two}} {{Three}}";
    std::vector<std::string> result2 = extractor.extractStrings(input2);

    std::cout << "Test Case 2:" << std::endl;
    for (const auto& str : result2) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 3
    std::string input3 = "This is a {{test}}, and {{invalid}} placeholder.";
    std::vector<std::string> result3 = extractor.extractStrings(input3);

    std::cout << "Test Case 3:" << std::endl;
    for (const auto& str : result3) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 4
    std::string input4 = "This is a {{abc}}, and {{good}} plac{{eholder.{{my {{ god";
    std::vector<std::string> result4 = extractor.extractStrings(input4);

    std::cout << "Test Case 4:" << std::endl;
    for (const auto& str : result4) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 5
    std::string input5 = "}} so good.";
    std::vector<std::string> result5 = extractor.extractStrings(input5);

    std::cout << "Test Case 5:" << std::endl;
    for (const auto& str : result5) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 6
    std::string input6 = "12{{3}}45{{6}}789";
    std::vector<std::string> result6 = extractor.extractStrings(input6);

    std::cout << "Test Case 6:" << std::endl;
    for (const auto& str : result6) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 7
    std::string input7 = "12{{3}}45{{6}}789{";
    std::vector<std::string> result7 = extractor.extractStrings(input7);

    std::cout << "Test Case 7:" << std::endl;
    for (const auto& str : result7) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 8
    std::string input8 = "{one}}abc{{two}}ok{";
    std::vector<std::string> result8 = extractor.extractStrings(input8);

    std::cout << "Test Case 8:" << std::endl;
    for (const auto& str : result8) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;

    // 测试用例 9
    std::string input9 = "{one abc two ok}";
    std::vector<std::string> result9 = extractor.extractStrings(input9);

    std::cout << "Test Case 9:" << std::endl;
    for (const auto& str : result9) {
        std::cout << "Extracted: " << str << std::endl;
    }
    std::cout << std::endl;
    return 0;
}

