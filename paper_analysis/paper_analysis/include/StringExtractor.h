//
// Created by qijiabao on 1/6/2024.
//
/*************************************************************************
 * @Project:     paper_analysis
 * @File:        StringExtractor.h
 * @Brief:       Brief description of the file
 * @Author:      qijiabao
 * @Contact:     Your Contact Information (e.g., email)
 * @Date:        1/6/2024
 * @Description: 
 *               This file is generated by CLion to provide a
 *               template for C/C++ source or header files. You can modify
 *               this template according to your project's needs.
 * @Note:        Additional notes or important points related to the file.
 * @License:     License information if applicable.
 * @Version:     Version number or other version information.
 * @TODO:        List of tasks or things to be done in the file (if any).
 * @Bug:         List of known issues or bugs (if any).
 * @IDE:         CLion
 ************************************************************************/
// Include necessary headers, if any

// Additional comments or code go here
#ifndef PAPER_ANALYSIS_STRINGEXTRACTOR_H
#define PAPER_ANALYSIS_STRINGEXTRACTOR_H

#include <string>
#include <vector>
namespace qi {

class StringExtractor {
private:
  // 标记是否删除空格和换行符
  bool clearSpaceAndNewLine_ = false;
  // 标记有{{
  bool leftBraceTwo_ = false;
  // 标记有{
  bool leftBraceOne_ = false;
  // 存储{{后的字符串
  std::string leftBraceAfterString_;

public:
  StringExtractor();
  ~StringExtractor();
  std::vector<std::string> extractStrings(const std::string& basicString);
  void setClearSpaceAndNewLine(bool clearSpaceAndNewLine);

private:
  // 你可以在这里添加其他私有成员或方法，如果需要的话
  // 清除指定字符串中的空格和换行符
  void clearSpaceAndNewLine(std::string& input);
};
}// namespace qi

#endif//PAPER_ANALYSIS_STRINGEXTRACTOR_H
