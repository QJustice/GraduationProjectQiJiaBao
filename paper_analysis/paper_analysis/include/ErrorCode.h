//
// Created by qijiabao on 1/8/2024.
//
/*************************************************************************
 * @Project:     paper_analysis
 * @File:        ErrorCode.h
 * @Brief:       Brief description of the file
 * @Author:      qijiabao
 * @Contact:     Your Contact Information (e.g., email)
 * @Date:        1/8/2024
 * @Description: 
 *               This file is generated by CLion to provide a
 *               template for C/C++ source or header files. You can modify
 *               this template according to your project's needs.
 * @Note:        Additional notes or important points related to the file.
 * @License:     License information if applicable.
 * @Version:     Version number or other version information.
 * @TODO:        List of tasks or things to be done in the file (if any).
 * @Bug:         List of known issues or bugs (if any).
 * @IDE:         CLion
 ************************************************************************/
// Include necessary headers, if any

// Additional comments or code go here
#ifndef PAPER_ANALYSIS_ERRORCODE_H
#define PAPER_ANALYSIS_ERRORCODE_H

#include <unordered_map>

namespace qi {

class ErrorCode {
public:
  enum class ErrorCodeEnum {
    FAILED = -1,
    SUCCESS = 0,
    UNKNOWN_ERROR = 1,
  };

  // 静态成员函数，用于获取枚举值的含义
  static const char* GetErrorDescription(ErrorCodeEnum errorCode)
  {
    static const std::unordered_map<ErrorCodeEnum, const char*> errorDescriptions = {
            {ErrorCodeEnum::FAILED, "失败"},
            {ErrorCodeEnum::SUCCESS, "成功"},
            {ErrorCodeEnum::UNKNOWN_ERROR, "未知错误"},
    };
    auto it = errorDescriptions.find(errorCode);
    return (it != errorDescriptions.end()) ? it->second : "未定义的错误代码";
  }
};
}// namespace qi
#endif//PAPER_ANALYSIS_ERRORCODE_H