//
// Created by qijiabao on 2/1/2024.
//
/*************************************************************************
 * @Project:     paper_analysis
 * @File:        Run.h
 * @Brief:       Brief description of the file
 * @Author:      qijiabao
 * @Contact:     Your Contact Information (e.g., email)
 * @Date:        2/1/2024
 * @Description: 
 *               This file is generated by CLion to provide a
 *               template for C/C++ source or header files. You can modify
 *               this template according to your project's needs.
 * @Note:        Additional notes or important points related to the file.
 * @License:     License information if applicable.
 * @Version:     Version number or other version information.
 * @TODO:        List of tasks or things to be done in the file (if any).
 * @Bug:         List of known issues or bugs (if any).
 * @IDE:         CLion
 ************************************************************************/
// Include necessary headers, if any

// Additional comments or code go here
#ifndef PAPER_ANALYSIS_RUN_H
#define PAPER_ANALYSIS_RUN_H

#include <string>

#include <xercesc/dom/DOMXPathResult.hpp>

#include "ErrorCode.h"
#include "Paragraph.h"
#include "TransString.h"

namespace qi {

class Run {
private:
  // 文档
  XERCES_CPP_NAMESPACE::DOMDocument* doc_ = nullptr;
  // 段落
  Paragraph* paragraph_ = nullptr;
  // <w:r> list
  XERCES_CPP_NAMESPACE::DOMNodeList* runList_ = nullptr;
  // <w:r> list XPath
  XERCES_CPP_NAMESPACE::DOMXPathResult* runListXPath_ = nullptr;
  // 运行块索引
  int runIndex_ = 0;
  // 运行块数量
  XMLSize_t runCount_ = 0;
  // 字符串转换工具
  TransString transString_;

public:
  Run();
  explicit Run(Paragraph* paragraph, XERCES_CPP_NAMESPACE::DOMDocument* doc);
  ~Run() = default;
  // 获取段落的所有<w:r>标签
  ErrorCode::ErrorCodeEnum runsParser(Paragraph* paragraph, XERCES_CPP_NAMESPACE::DOMDocument* doc);
  // 获取运行块数量
  ErrorCode::ErrorCodeEnum getRunCount(XMLSize_t* count) const;
  // 获取当前运行块索引
  ErrorCode::ErrorCodeEnum getRunIndex(int* index) const;
  // 获取当前运行块
  ErrorCode::ErrorCodeEnum getRun(XERCES_CPP_NAMESPACE::DOMNode** run) const;
  // 获取下一个运行块
  ErrorCode::ErrorCodeEnum getNextRun(XERCES_CPP_NAMESPACE::DOMNode** run);
  // 获取上一个运行块
  ErrorCode::ErrorCodeEnum getPreviousRun(XERCES_CPP_NAMESPACE::DOMNode** run);
  // 重置运行块索引
  ErrorCode::ErrorCodeEnum resetRunIndex();
  // 获取运行块文本
  ErrorCode::ErrorCodeEnum getRunText(std::string* text);
};

}// namespace qi

#endif//PAPER_ANALYSIS_RUN_H
